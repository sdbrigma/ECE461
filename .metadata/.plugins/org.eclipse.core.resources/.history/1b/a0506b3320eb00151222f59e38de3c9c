/*
 * interrupts.c
 *
 *  Created on: Mar 5, 2016
 *      Author: Steffon Brigman
 */

#include "msp432.h"
#include "stdint.h"
#include "driverlib.h"
#include "functions.h"
#include "macros.h"

volatile uint32_t debounce_value;
void port5IsrHandler(){ // SW1
	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk; // SysTick enable module
	SysTick->LOAD = 9; // SysTick load period for 10
	while(1){
		if(SysTick->VAL > 0){// if current SysTick value is greater than 4
			SysTick->CTRL &= ~(SysTick_CTRL_ENABLE_Msk); // disable SysTick module
			burglar_alarm();
			//debounce_value = 0;
			break;
		}
	}
}

void port3IsrHandler(){//SW2
	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk; // SysTick enable module
	SysTick->LOAD = 9; // SysTick load period for 10

	while(1){
		if(SysTick->VAL > 4){
			SysTick->CTRL &= ~(SysTick_CTRL_ENABLE_Msk); // disable SysTick module
			if(alarm_state){
				alarm_system_state(FALSE);
				alarm_state = 0;
			}
			else{
				alarm_system_state(TRUE);
				alarm_state = 1;
			}
			break;
		}
	}
}

void adc14IsrHandler(){
			if((ADC14->MEM[10] >= BURGLAR) && alarm_state){
				//burglar_alarm();
			}
		ADC14_clearInterruptFlag(ADC_INT10);
}
